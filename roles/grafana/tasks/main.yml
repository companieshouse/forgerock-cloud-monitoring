---

# To avoid duplicate resource creation issues, we currently delete and recreate datasources and dashboards on each run. This isn't ideal,
# and should be changed to a more intelligent "update changed properties" approach eventually.

- set_fact:
    forgerock_vars: "{{ foregrock_variables | first }}"  # Yes, it's spelled like that

- name: Get existing datasources
  uri:
    url: "{{ grafana_url }}/api/datasources"
    method: GET
    url_username: "{{ forgerock_vars.grafana_admin_user }}"
    url_password: "{{ forgerock_vars.grafana_admin_password }}"
    status_code: 200
    force_basic_auth: yes
    headers:
      Content-Type: application/json
  register: found_datasources_json
  no_log: False

- set_fact:
    found_datasources: "{{ found_datasources_json | json_query('json[].name') | list }}"

- name: Delete existing datasources pending re-creation
  uri:
    url: "{{ grafana_url }}/api/datasources/name/{{ item }}"
    method: DELETE
    url_username: "{{ forgerock_vars.grafana_admin_user }}"
    url_password: "{{ forgerock_vars.grafana_admin_password }}"
    status_code: 200
    force_basic_auth: yes
    headers:
      Content-Type: application/json
  loop:
    "{{ found_datasources }}"

- name: Find datasource JSONs
  find:
    paths: roles/grafana/templates/datasources
    patterns: '*.json.j2'
  register: datasources_to_create

- name: Create datasources
  loop: "{{ datasources_to_create.files }}"
  uri:
    url: "{{ grafana_url }}/api/datasources"
    method: POST
    url_username: "{{ forgerock_vars.grafana_admin_user }}"
    url_password: "{{ forgerock_vars.grafana_admin_password }}"
    body: "{{ lookup('template', '{{ item.path }}') }}"
    status_code: 200
    body_format: json
    force_basic_auth: yes
    headers:
      Content-Type: application/json
  no_log: False

- name: Get existing dashboards
  uri:
    url: "{{ grafana_url }}/api/search?query=%"
    method: GET
    url_username: "{{ forgerock_vars.grafana_admin_user }}"
    url_password: "{{ forgerock_vars.grafana_admin_password }}"
    status_code: 200
    force_basic_auth: yes
    headers:
      Content-Type: application/json
  register: found_dashboards_json
  no_log: False

- set_fact:
    found_dashboards: "{{ found_dashboards_json | json_query('json[].uid') | list }}"

- name: Delete existing dashboards pending re-creation
  uri:
    url: "{{ grafana_url }}/api/dashboards/uid/{{ item }}"
    method: DELETE
    url_username: "{{ forgerock_vars.grafana_admin_user }}"
    url_password: "{{ forgerock_vars.grafana_admin_password }}"
    status_code: 200
    force_basic_auth: yes
    headers:
      Content-Type: application/json
  loop:
    "{{ found_dashboards }}"

- name: Find dashboard JSONs
  find:
    paths: roles/grafana/templates/dashboards
    patterns: '*.json.j2'
  register: dashboards_to_create

- debug:
    msg: "{{ dashboards_to_create }}"

- name: Create dashboards
  loop: "{{ dashboards_to_create.files }}"
  uri:
    url: "{{ grafana_url }}/api/dashboards/db"
    method: POST
    url_username: "{{ forgerock_vars.grafana_admin_user }}"
    url_password: "{{ forgerock_vars.grafana_admin_password }}"
    body: "{{ lookup('template', '{{ item.path }}') }}"
    status_code: 200
    body_format: json
    validate_certs: no
    force_basic_auth: yes
    headers:
      Content-Type: application/json
  no_log: False